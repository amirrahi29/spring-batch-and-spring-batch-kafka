spring:
  application:
    name: BQS-Main

  datasource:
    url: jdbc:h2:mem:patientDB
    driver-class-name: org.h2.Driver
    username: syf
    password:

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  h2:
    console:
      enabled: true
      path: /h2-console

  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always
    jpa:
      defer-datasource-initialization: true

  sql:
    init:
      mode: always
      schema-locations:
        - classpath:org/springframework/batch/core/schema-h2.sql

  kafka:
    bootstrap-servers: localhost:9092  # switch to live SSL brokers for prod
    topic: amir-topic
    concurrency: 6

    properties:
      security.protocol: PLAINTEXT     # For production use: SSL
      client.dns.lookup: use_all_dns_ips
      api.version.request: true

    consumer:
      group-id: patient-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.bqs.main.model.PatientWrapper

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

s3:
  aws:
    accessKey: XXXX
    secretKey: XXXX
    region: ap-south-1
    bucket: XXXX

app:
  redis:
    host: localhost
    port: 6379
    password: ""
    expiration-seconds: 86400 # 1 day in seconds
  scheduler:
    enabled: true
    cron: "0 */1 * * * *"

server:
  port: 8081

logging:
  level:
    org.springframework.batch: DEBUG
